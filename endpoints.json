{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "POST /api/topics": {
    "description": "posts a new topic",
    "queries": [],
    "exampleBody": { "slug": "puzzles", "description": "All about puzzles!" },
    "exampleResponse": {
      "topic": [{ "slug": "puzzles", "description": "All about puzzles!" }]
    }
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "firstUser",
          "avatar_url": "www.useravatar.com",
          "name": "Adam"
        },
        {
          "username": "anotherUser",
          "avatar_url": "www.google.com",
          "name": "Caroline"
        }
      ]
    }
  },
  "POST /api/users": {
    "description": "posts a new user",
    "queries": [],
    "exampleBody": {
      "username": "newUser",
      "avatar_url": "www.google.com",
      "name": "Bob",
      "password": "ilovecoding"
    },
    "exampleResponse": {
      "user": {
        "username": "newUser",
        "avatar_url": "www.google.com",
        "name": "Bob"
      }
    }
  },
  "GET /api/users/:username": {
    "description": "serves a specific user",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "firstUser",
        "avatar_url": "www.useravatar.com",
        "name": "Adam"
      }
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles and a count of the total number of articles, defaulting to 10 per page",
    "queries": ["author", "topic", "sort_by", "order", "limit", "p"],
    "exampleResponse": {
      "total_count": 1,
      "articles": [
        {
          "article_id": 1,
          "title": "Seafood substitutions are increasing",
          "body": "text from article...",
          "votes": 0,
          "topic": "cooking",
          "author": "weegembump",
          "created_at": "2018-05-30T15:59:13.341Z",
          "comment_count": "6"
        }
      ]
    }
  },
  "POST /api/articles": {
    "description": "posts a new article",
    "exampleBody": {
      "username": "butter_bridge",
      "title": "a new article",
      "topic": "cats",
      "body": "text from article..."
    },
    "exampleResponse": {
      "article": [
        {
          "article_id": 2,
          "title": "a new article",
          "body": "text from article...",
          "votes": 0,
          "topic": "cats",
          "author": "butter_bridge",
          "created_at": "2018-05-30T15:59:13.341Z",
          "comment_count": "0"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an object of an article's details",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Running a Node App",
        "body": "text from article...",
        "votes": 0,
        "topic": "coding",
        "author": "jessjelly",
        "created_at": "2016-08-18T12:07:52.389Z",
        "comment_count": "8"
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "increments the article votes by amount passed in body",
    "queries": [],
    "exampleBody": { "inc_votes": "10" },
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Running a Node App",
        "body": "text from article...",
        "votes": 10,
        "topic": "coding",
        "author": "jessjelly",
        "created_at": "2016-08-18T12:07:52.389Z"
      }
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "deletes the selected article",
    "queries": [],
    "exampleResponse": {}
  },
  "POST /api/articles/:article_id/comments": {
    "description": "adds a comment to an article",
    "queries": [],
    "exampleBody": { "username": "tickle122", "body": "Great article!" },
    "exampleResponse": {
      "comment": {
        "comment_id": 303,
        "author": "tickle122",
        "article_id": 1,
        "votes": 0,
        "created_at": "2020-02-05T15:15:42.246Z",
        "body": "Great article!"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an object of all comments for an article",
    "queries": ["sort_by", "order"],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 303,
          "author": "tickle122",
          "article_id": 1,
          "votes": 0,
          "created_at": "2020-02-05T15:15:42.246Z",
          "body": "Great article!"
        }
      ]
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "increments the comment votes by the amount passed in the body",
    "queries": [],
    "exampleBody": { "inc_votes": "-5" },
    "exampleResponse": {
      "comment": [
        {
          "comment_id": 303,
          "author": "tickle122",
          "article_id": 1,
          "votes": -5,
          "created_at": "2020-02-05T15:15:42.246Z",
          "body": "Great article!"
        }
      ]
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a comment",
    "queries": [],
    "exampleResponse": {}
  }
}
